name: Daily

on: [push]

jobs:
  read:
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.read_doc.outputs.json }}
      text: ${{ steps.read_doc.outputs.text }}
    steps:
      - name: Reading...
        run: |
          echo "Reading..."
      - name: Read Documents
        uses: or13/federal-register@v0.0.3
        id: read_docs
        with:
          agency: "commerce-department"

      - name: Read a Document
        uses: or13/federal-register@v0.0.3
        id: read_doc
        with:
          document_number: ${{ fromJson(steps.read_docs.outputs.json).results[0].document_number }}
          raw: true
          limit: 1000

  analyze:
    needs:
      - read
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.completion.outputs.json }}
      text: ${{ steps.completion.outputs.text }}
    steps:
      - name: Analyzing...
        run: |
          echo "Analyzing..."
          echo '${{needs.read.outputs.json}}' | jq
      - name: Open AI Completion
        uses: or13/open-ai@v0.0.3
        id: completion
        with:
          api-key: ${{ secrets.OPENAI_API_KEY }}
          engine: "text-davinci-002"
          temperature: 0.7
          max_tokens: 100
          top_p: 1.0
          frequency_penalty: 0.0
          presence_penalty: 0.0
          prompt: |-

            Sanitize and summarize this html in a few sentences

            ${{ needs.read.outputs.text }}

            \n\nTl;dr

  share:
    needs:
      - read
      - analyze
    runs-on: ubuntu-latest
    steps:
      - name: Post Discussion
        uses: or13/github-api-actions@v0.0.2
        id: post
        with:
          access-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          owner: "OR13"
          repo: "aquila"
          category: "Announcements"
          title: ${{ fromJSON(needs.read.outputs.json).action }}
          body: |-
            ### Abstract

            ${{ fromJSON(needs.read.outputs.json).abstract }}

            - [source](${{ fromJSON(needs.read.outputs.json).html_url }})

            #### Summary

            ```
            ${{ needs.analyze.outputs.text }}
            ```
